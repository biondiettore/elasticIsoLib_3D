#ifndef NONLINEAR_PROP_ELASTIC_GPU_FUNCTIONS_3D_H
#define NONLINEAR_PROP_ELASTIC_GPU_FUNCTIONS_3D_H 1
#include <vector>

/*********************************** Initialization **************************************/
// Gpu info
bool getGpuInfo_3D(std::vector<int> gpuList, int info, int deviceNumber);
void setGpuP2P(int nGpu, int info, std::vector<int> gpuList);
void initNonlinearElasticGpu_3D(float dz, float dx, float dy, int nz, int nx, int ny, int nts, float dts, int sub, int minPad, int blockSize, float alphaCos, int nGpu, int iGpuId, int iGpuAlloc);
void allocateNonlinearElasticGpu_3D(float *rhoxDtw, float *rhoyDtw, float *rhozDtw, float *lamb2MuDt, float *lambDtw, float *muxzDtw, float *muxyDtw, float *muyzDtw, int nx, int ny, int nz, int iGpu, int iGpuId);
void deallocateNonlinearElasticGpu_3D(int iGpu, int iGpuId);

/*********************************** Nonlinear FWD **************************************/
void propElasticFwdGpu_3D(float *modelRegDts_vx, float *modelRegDts_vy, float *modelRegDts_vz, float *modelRegDts_sigmaxx, float *modelRegDts_sigmayy, float *modelRegDts_sigmazz, float *modelRegDts_sigmaxz, float *modelRegDts_sigmaxy, float *modelRegDts_sigmayz, float *dataRegDts_vx, float *dataRegDts_vy, float *dataRegDts_vz, float *dataRegDts_sigmaxx, float *dataRegDts_sigmayy, float *dataRegDts_sigmazz, float *dataRegDts_sigmaxz, float *dataRegDts_sigmaxy, float *dataRegDts_sigmayz, long long *sourcesPositionRegCenterGrid, long long nSourcesRegCenterGrid, long long *sourcesPositionRegXGrid, long long nSourcesRegXGrid, long long *sourcesPositionRegYGrid, long long nSourcesRegYGrid, long long *sourcesPositionRegZGrid, long long nSourcesRegZGrid, long long *sourcesPositionRegXZGrid, long long nSourcesRegXZGrid, long long *sourcesPositionRegXYGrid, long long nSourcesRegXYGrid, long long *sourcesPositionRegYZGrid, long long nSourcesRegYZGrid, long long *receiversPositionRegCenterGrid, long long nReceiversRegCenterGrid, long long *receiversPositionRegXGrid, long long nReceiversRegXGrid, long long *receiversPositionRegYGrid, long long nReceiversRegYGrid, long long *receiversPositionRegZGrid, long long nReceiversRegZGrid, long long *receiversPositionRegXZGrid, long long nReceiversRegXZGrid, long long *receiversPositionRegXYGrid, long long nReceiversRegXYGrid, long long *receiversPositionRegYZGrid, long long nReceiversRegYZGrid, int nx, int ny, int nz, int iGpu, int iGpuId);
void propElasticFwdGpudomDec_3D(float *modelRegDts_vx, float *modelRegDts_vy, float *modelRegDts_vz, float *modelRegDts_sigmaxx, float *modelRegDts_sigmayy, float *modelRegDts_sigmazz, float *modelRegDts_sigmaxz, float *modelRegDts_sigmaxy, float *modelRegDts_sigmayz, float *dataRegDts_vx, float *dataRegDts_vy, float *dataRegDts_vz, float *dataRegDts_sigmaxx, float *dataRegDts_sigmayy, float *dataRegDts_sigmazz, float *dataRegDts_sigmaxz, float *dataRegDts_sigmaxy, float *dataRegDts_sigmayz, long long *sourcesPositionRegCenterGrid, long long nSourcesRegCenterGrid, long long *sourcesPositionRegXGrid, long long nSourcesRegXGrid, long long *sourcesPositionRegYGrid, long long nSourcesRegYGrid, long long *sourcesPositionRegZGrid, long long nSourcesRegZGrid, long long *sourcesPositionRegXZGrid, long long nSourcesRegXZGrid, long long *sourcesPositionRegXYGrid, long long nSourcesRegXYGrid, long long *sourcesPositionRegYZGrid, long long nSourcesRegYZGrid, long long *receiversPositionRegCenterGrid, long long nReceiversRegCenterGrid, long long *receiversPositionRegXGrid, long long nReceiversRegXGrid, long long *receiversPositionRegYGrid, long long nReceiversRegYGrid, long long *receiversPositionRegZGrid, long long nReceiversRegZGrid, long long *receiversPositionRegXZGrid, long long nReceiversRegXZGrid, long long *receiversPositionRegXYGrid, long long nReceiversRegXYGrid, long long *receiversPositionRegYZGrid, long long nReceiversRegYZGrid, int nx, int ny, int nz, std::vector<int> ny_domDec, std::vector<int> gpuList);

/*********************************** Nonlinear ADJ **************************************/
void propElasticAdjGpu_3D(float *modelRegDts_vx, float *modelRegDts_vy, float *modelRegDts_vz, float *modelRegDts_sigmaxx, float *modelRegDts_sigmayy, float *modelRegDts_sigmazz, float *modelRegDts_sigmaxz, float *modelRegDts_sigmaxy, float *modelRegDts_sigmayz, float *dataRegDts_vx, float *dataRegDts_vy, float *dataRegDts_vz, float *dataRegDts_sigmaxx, float *dataRegDts_sigmayy, float *dataRegDts_sigmazz, float *dataRegDts_sigmaxz, float *dataRegDts_sigmaxy, float *dataRegDts_sigmayz, long long *sourcesPositionRegCenterGrid, long long nSourcesRegCenterGrid, long long *sourcesPositionRegXGrid, long long nSourcesRegXGrid, long long *sourcesPositionRegYGrid, long long nSourcesRegYGrid, long long *sourcesPositionRegZGrid, long long nSourcesRegZGrid, long long *sourcesPositionRegXZGrid, long long nSourcesRegXZGrid, long long *sourcesPositionRegXYGrid, long long nSourcesRegXYGrid, long long *sourcesPositionRegYZGrid, long long nSourcesRegYZGrid, long long *receiversPositionRegCenterGrid, long long nReceiversRegCenterGrid, long long *receiversPositionRegXGrid, long long nReceiversRegXGrid, long long *receiversPositionRegYGrid, long long nReceiversRegYGrid, long long *receiversPositionRegZGrid, long long nReceiversRegZGrid, long long *receiversPositionRegXZGrid, long long nReceiversRegXZGrid, long long *receiversPositionRegXYGrid, long long nReceiversRegXYGrid, long long *receiversPositionRegYZGrid, long long nReceiversRegYZGrid, int nx, int ny, int nz, int iGpu, int iGpuId);
void propElasticAdjGpudomDec_3D(float *modelRegDts_vx, float *modelRegDts_vy, float *modelRegDts_vz, float *modelRegDts_sigmaxx, float *modelRegDts_sigmayy, float *modelRegDts_sigmazz, float *modelRegDts_sigmaxz, float *modelRegDts_sigmaxy, float *modelRegDts_sigmayz, float *dataRegDts_vx, float *dataRegDts_vy, float *dataRegDts_vz, float *dataRegDts_sigmaxx, float *dataRegDts_sigmayy, float *dataRegDts_sigmazz, float *dataRegDts_sigmaxz, float *dataRegDts_sigmaxy, float *dataRegDts_sigmayz, long long *sourcesPositionRegCenterGrid, long long nSourcesRegCenterGrid, long long *sourcesPositionRegXGrid, long long nSourcesRegXGrid, long long *sourcesPositionRegYGrid, long long nSourcesRegYGrid, long long *sourcesPositionRegZGrid, long long nSourcesRegZGrid, long long *sourcesPositionRegXZGrid, long long nSourcesRegXZGrid, long long *sourcesPositionRegXYGrid, long long nSourcesRegXYGrid, long long *sourcesPositionRegYZGrid, long long nSourcesRegYZGrid, long long *receiversPositionRegCenterGrid, long long nReceiversRegCenterGrid, long long *receiversPositionRegXGrid, long long nReceiversRegXGrid, long long *receiversPositionRegYGrid, long long nReceiversRegYGrid, long long *receiversPositionRegZGrid, long long nReceiversRegZGrid, long long *receiversPositionRegXZGrid, long long nReceiversRegXZGrid, long long *receiversPositionRegXYGrid, long long nReceiversRegXYGrid, long long *receiversPositionRegYZGrid, long long nReceiversRegYZGrid, int nx, int ny, int nz, std::vector<int> ny_domDec, std::vector<int> gpuList);



#endif
